import org.gradle.api.provider.MapProperty

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.8'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.openapi.generator' version '5.3.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'


repositories {
	mavenCentral()
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.openapitools:openapi-generator-gradle-plugin:6.4.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'org.springframework.boot:spring-boot-starter-parent:2.7.8'
	implementation 'org.springframework:spring-context:5.3.20'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compileOnly 'javax.servlet:javax.servlet-api:4.0.1'
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'
	implementation 'io.springfox:springfox-swagger2:3.0.0'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.4'
	implementation 'org.openapitools:openapi-generator-core:5.3.0'

}

compileJava.dependsOn(openApiGenerate)

MapProperty<String,String> myConfig = project.objects.mapProperty(String.class,String.class)
myConfig.put("dateLibrary","java8")
myConfig.put("virtualservice","false")
myConfig.put("serviceImplimentation","false")
myConfig.put("returnResponse","true")
myConfig.put("interfaceOnly","true")
myConfig.put("useTags","true")
myConfig.put("serializableModel","true")
myConfig.put("generateSupportingFiles","true")
myConfig.put("supportingFilesToGenerate","ApiUtil.java")

openApiGenerate {
	inputSpec = "/Users/venkateshraja/Downloads/gradle-openapi/src/main/resources/student-api.yml".toString()
	generatorName = "spring"
	apiPackage = "com.gain.java.knowledge.api"
	modelPackage = "com.gain.java.knowledge.api.model"
    outputDir = "$buildDir/generated"
	groupId = "com.gain"
	configOptions = myConfig

}
sourceSets  {
	main {
		java {
			srcDir(files("${openApiGenerate.outputDir.get()}/src/main/java"))
		}
	}
}
